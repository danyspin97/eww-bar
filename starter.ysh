const prefix = ENV => get('XDG_CONFIG_HOME', "$[ENV.HOME]/.config")
const conf_file = "$prefix/eww/eww.yuck"
const br_conf_file = "$prefix/eww/gen_brightness.yuck"

proc generate_eww_config(; displays) {
    # Remove the old config
    if test -f "$conf_file" {
        rm "$conf_file"
    }
    if test -f "$br_conf_file" {
        rm "$br_conf_file"
    }
    for display in (displays) {
        var conf = """
            (defwindow bar$display
              :monitor "$display"
              :geometry (geometry :x "0%"
                                  :y "1%"
                                  :width "98%"
                                  :anchor "top center")
              :stacking "fg"
              :reserve (struts :distance "40px" :side "top")
              :exclusive true
              :class "bar"
                (bar :display_id "$display"))
        """
        echo "$conf" >> "$conf_file"
    }

    echo '(include "./modules.yuck")' >> "$conf_file"

    # if it is just one display, create a 
    if (displays=>len() === 1) {
        var display = displays[0]
        setvar conf = """
            (defpoll brightness_percent :interval "5s" "lumactl get -p -d $display | cut -d'%' -f1")
            (defwidget brigthbar_proxy [display_id]
              (eventbox :onhover "eww update br_reveal=true" :onhoverlost "eww update br_reveal=false"
                (box  :orientation "h"
                      :space-evenly true
                      :class "metric"
                (brightness-icon)
                  (revealer :transition "slideleft"
                            :reveal br_reveal
                            :duration "350ms"
                    (brightbar :display_id "$display" :brightness_percent brightness_percent)))))
        """
        echo "$conf" >> "$br_conf_file"
    } else {
        setvar conf = ""
        for display in (displays) {
        setvar conf = """
            $conf
            (defpoll brightness_percent_$display :interval "5s" "lumactl get -p -d $display | cut -d'%' -f1")

        """
        }
        setvar conf = """
            $conf
            (defvar br_show_win false)
            (defwidget brigthbar_proxy [display_id]
              (eventbox :onhover "eww open --toggle --screen \${display_id} brightness_win"
                        :onhoverlost "eww open --toggle --screen \${display_id} brightness_win"
              (button :class "brightbar_button"
                      :onclick "eww open --toggle --screen \${display_id} brightness_win"
                      :show_truncated false
                    (brightness-icon))))
            (defwindow brightness_win []
                       :geometry (geometry :x "-20px" 
                                           :y "1%"
                                           :anchor "top right"
                                           :width "290px" 
                                           :height "120px")
              (box :class "brightness_win" :orientation "v" :space-evenly "true" :hexpand "false" :vexpand "false" :spacing 0
        """
        for display in (displays) {
            setvar conf = """
                $conf
                (box :orientation "h"
                     :space-evenly false
                     :class "metric"
                    (brightness-icon)
                    (label :text "$display")
                    (brightbar :display_id "$display" :brightness_percent brightness_percent_$display))
            """
        }
        setvar conf = """
            $conf))
        """
        echo "$conf" >> "$br_conf_file"
    }
}

var displays = []

graceful_close() {
    for display in (displays) {
        eww close bar$display
    }
    exit 0
}

trap graceful_close INT TERM

while true {
    setvar displays = $(wmctl list-outputs --short --name)=>split(b'\n')
    generate_eww_config (displays)
    
    for display in (displays) {
        # A monitor might already have its bar opened, ignore the error
        try {
            eww open bar$display
        }
    }

    # Wait until the output changes
    wmctl watch-for-output-changes
}

